/*C1*/SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
COMMIT
/*C2*/SET SCHEMA PUBLIC
DROP PROCEDURE read_e_names IF EXISTS
DROP PROCEDURE read_names_by_letter IF EXISTS
DROP PROCEDURE magic_number IF EXISTS
DROP PROCEDURE double_number IF EXISTS
DROP TABLE names IF EXISTS
DROP TABLE exhibits IF EXISTS
CREATE TABLE exhibits (\u000a  id INTEGER PRIMARY KEY,\u000a  name VARCHAR(255),\u000a  num_acres DECIMAL(4,1))
CREATE TABLE names (\u000a   id INTEGER PRIMARY KEY,\u000a   species_id integer REFERENCES exhibits (id),\u000a   name VARCHAR(255))
INSERT INTO EXHIBITS VALUES(1,'African Elephant',7.5)
COMMIT
INSERT INTO EXHIBITS VALUES(2,'Zebra',1.2)
COMMIT
INSERT INTO NAMES VALUES(1,1,'Elsa')
COMMIT
INSERT INTO NAMES VALUES(2,2,'Zelda')
COMMIT
INSERT INTO NAMES VALUES(3,1,'Ester')
COMMIT
INSERT INTO NAMES VALUES(4,1,'Eddie')
COMMIT
INSERT INTO NAMES VALUES(5,2,'Zoe')
COMMIT
CREATE PROCEDURE read_e_names()\u000aREADS SQL DATA DYNAMIC RESULT SETS 1\u000aBEGIN ATOMIC\u000aDECLARE result CURSOR WITH RETURN FOR SELECT * FROM names WHERE LOWER(name) LIKE 'e%';\u000aOPEN result;\u000aEND
CREATE PROCEDURE read_names_by_letter(IN prefix VARCHAR(10))\u000aREADS SQL DATA DYNAMIC RESULT SETS 1\u000aBEGIN ATOMIC\u000aDECLARE result CURSOR WITH RETURN FOR\u000aSELECT * FROM names WHERE LOWER(name) LIKE CONCAT(LOWER(prefix), '%');\u000aOPEN result;\u000aEND
CREATE PROCEDURE magic_number(OUT num INT) READS SQL DATA\u000a      BEGIN ATOMIC\u000a     SET num = 42;\u000a      END
CREATE PROCEDURE double_number(INOUT num INT) READS SQL DATA\u000a  DYNAMIC RESULT SETS 1\u000a  BEGIN ATOMIC\u000a  SET num = num * 2;\u000a  END
DISCONNECT
